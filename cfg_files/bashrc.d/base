green=$(tput setaf 2)
cyan=$(tput setaf 6)
red=$(tput setaf 1)
reset=$(tput sgr0)

function ps1_currdir {
    prefix="/"
    current_dir=$(pwd)
    suffix=$(echo $current_dir | rev | cut -d"/" -f1,2 | rev)
    dirlevel=$(echo $current_dir | grep -o "/" | wc -l)
    if [ $dirlevel -gt 2 ]; then
        prefix="*/"
    elif [ $dirlevel -eq 1 ]; then
        prefix=""
    fi

    echo "$prefix$suffix"
}

function ps1_gbranch {

    status=$(git status 2> /dev/null | egrep -m 1 "Changes not staged for commit|Changes to be committed" | sed -e 's|.\+|*|')
    gbranch=$(git branch 2> /dev/null | cut -d' ' -f2)
    echo "$status$gbranch$status" | sed -e 's|\(.\+\)|(\1)\ |'
}

function ps1_git_status {
    
    status=$(git status 2> /dev/null)
    if [ $(echo $status | egrep -c -m 1 "On branch") -lt 1 ]; then
        exit
    elif [ $(echo $status | egrep -c -m 1 "Untracked files") -eq 1 ]; then
        echo "✘+ "
    elif [ $(echo $status | egrep -c -m 1 "Changes (not staged for commit|to be committed)") -eq 1 ]; then
        echo "✘ "
    else
        echo "✔ "
    fi
    
}

function ps1_exit {
    prev_exit=$?
    if [ $prev_exit -ne 0 ]; then
        echo "[$prev_exit]"
    else
        echo ""
    fi
}

## Timing
function ps1_timer_start {
  timer=${timer:-$SECONDS}
}

function ps1_timer_stop {
  timer_show=$(($SECONDS - $timer))
  unset timer
}

trap 'ps1_timer_start' DEBUG

PROMPT_COMMAND="ps1_timer_stop"

# export PS1="\[$cyan\][\A]\[$reset\] \[$green\]\$(ps1_gbranch)\[$reset\]\u@\h \$(ps1_currdir) $> "
# export PS1="\[$cyan\][\A]\[$reset\] \u@\h \$(ps1_git_status)\$(ps1_currdir) $> "
export PS1="\[$red\]\$(ps1_exit)\[$reset\]\[$cyan\][\A \${timer_show}s]\[$reset\] \u@\h \$(ps1_git_status)\$(ps1_currdir) $> "
